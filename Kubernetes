Cluster:
Set of nodes
nodes = Virual or physical machine

Kubernetes Cluster

Master cluster (node) only one
Work cluster (node) tons of them


Master Node:
-Master runs aall cluster's control plane services
-The brains where control and decisions are made


Master node contain:

Control Plane:
Compuesto por componentes principales: API Server, Cluster Store, Control Manager, Cloud Controller Manager

API Server =
-Frontend to kubernetes control plane
-All communications go through API Server EXTERNAL and Internal
-Exposes Restful API on port 443
-Authentication and Authorisation checks


Cluster Store|State:  ETCD
-Stores configuration and state of the entire cluster
-Distributed Key Value data store
-Single source of truth


Scheduler:
-Watches for new workloads/pods and assings them to a node based on several scheduling factors.
-Healthy?
-Enough resources?
-Port Available?
-Affinity and Anti Affinity rules
-Etc

Controller Manager:
-Daemon that manages the control loop. Controllers of controllers
  - Node Controller :

Cloud Controller Manager:
-Responsible to interact with underlying cloud provider ( AWS, Azure, Google Cloud )

Example Route: In > API > ETCD(Store) > CCD > AWS, GOOGLE CLOUD


Worker Node:
-VM or Physical Machine running linux
-Provides running environment for your applications
-3 Main Components:
    -Kubelet
    -Container Runtime
    -Kube Proxy

Kubelet:
-Main Agent that runs on every node
-Receives pod definitions from API server
-Interacts with Container Runtime to run containers associated with the Pod
-Reports Node and Pod state to master

API <- -> Kubelet -> Container Runtime

Container Runtime:
-Responsible to pull images from Containers Registries like Docker etc.
-Starting container from images
-Container Runtime Interface ( CRI )
    -Interface for 3rd party container runtime
    -ContainerD

Kube Proxy:
-Agent runs on everyone through DaemonSets
-Responsible for :
    -Local cluster networking
    -Each node gets own unique IP address
    -Routing network traffic to load balanced services

Pods:
-A pod is the smallest deployable unit in Kubernetes and not containers
-Group of 1 or more Container
-Represents a running process
-Share network and Volumes
-Never Create Pods on its own. Use Controllers Instead
-Ephemeral and Disposable

Pod only can have 1 main container

Services:
-Stable IP Address
-Stable DNS Name
-Stable Port
-Types of Services:
    -ClusterIP(Default)
    -NodePort
    -ExternalName
    -LoadBalancer





